{"remainingRequest":"/home/cachac/vueProjects/nextlevel/node_modules/babel-loader/lib/index.js!/home/cachac/vueProjects/nextlevel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cachac/vueProjects/nextlevel/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cachac/vueProjects/nextlevel/src/views/EventList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cachac/vueProjects/nextlevel/src/views/EventList.vue","mtime":1540409343000},{"path":"/home/cachac/vueProjects/nextlevel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cachac/vueProjects/nextlevel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cachac/vueProjects/nextlevel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cachac/vueProjects/nextlevel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/cachac/vueProjects/nextlevel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EventCard from '@/components/EventCard.vue';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    EventCard: EventCard\n  },\n  created: function created() {\n    this.perPage = 3; // Setting perPage here and not in data means it won't be reactive.\n    // We don't need it to be reactive, and this way our component has access to it.\n\n    this.$store.dispatch('event/fetchEvents', {\n      perPage: this.perPage,\n      page: this.page\n    });\n  },\n  computed: _objectSpread({\n    page: function page() {\n      return parseInt(this.$route.query.page) || 1;\n    },\n    hasNextPage: function hasNextPage() {\n      return this.event.eventsTotal > this.page * this.perPage;\n    }\n  }, mapState(['event', 'user']))\n};",{"version":3,"sources":["EventList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,OAAA,SAAA,MAAA,4BAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,OAJA,qBAIA;AACA,SAAA,OAAA,GAAA,CAAA,CADA,CACA;AACA;;AAEA,SAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA;AACA,MAAA,OAAA,EAAA,KAAA,OADA;AAEA,MAAA,IAAA,EAAA,KAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,QAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,QAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,aAAA,KAAA,KAAA,CAAA,WAAA,GAAA,KAAA,IAAA,GAAA,KAAA,OAAA;AACA;AANA,KAOA,QAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAPA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>Events for {{ user.user.name }}</h1>\n    <EventCard v-for=\"event in event.events\" :key=\"event.id\" :event=\"event\"/>\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{ name: 'event-list', query: { page: page - 1 } }\" rel=\"prev\">\n      Prev Page</router-link>\n      <template v-if=\"hasNextPage\"> | </template>\n    </template>\n    <router-link v-if=\"hasNextPage\" :to=\"{ name: 'event-list', query: { page: page + 1 } }\" rel=\"next\">\n      Next Page</router-link>\n  </div>\n</template>\n\n<script>\nimport EventCard from '@/components/EventCard.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    EventCard\n  },\n  created() {\n    this.perPage = 3 // Setting perPage here and not in data means it won't be reactive.\n    // We don't need it to be reactive, and this way our component has access to it.\n\n    this.$store.dispatch('event/fetchEvents', {\n      perPage: this.perPage,\n      page: this.page\n    })\n  },\n  computed: {\n    page() {\n      return parseInt(this.$route.query.page) || 1\n    },\n    hasNextPage() {\n      return this.event.eventsTotal > this.page * this.perPage\n    },\n    ...mapState(['event', 'user'])\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}